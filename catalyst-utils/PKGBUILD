# Contributor: Fabian Bornschein <plusfabi[at]gmail[dog]com>
# Contributor: Vi0L0 <vi0l093@gmail.com>
# Maintainer: Philip MÃ¼ller <philm[at]manjaro[dog]org>
# Maintainer: Roland Singer <roland[at]manjaro[dog]org>

_testing=n # For testing with a newer GCN card (released until the end of 2015 at least)

pkgbase=catalyst-utils
pkgname=('catalyst-utils' 'opencl-catalyst' 'mhwd-catalyst')
pkgver=15.302.2301
pkgrel=18
_execlineorig="Exec=amdxdg-su -c amdcccle"
_execlinenew="Exec=xdg-su amdcccle"
pkgdesc="AMD/ATI Catalyst drivers utilities and libraries."
arch=('i686' 'x86_64')
url="http://www.amd.com"
license=('custom')
source=("https://drivers.amd.com/drivers/linux/amd-catalyst-15.9-linux-installer-15.201.1151-x86.x86_64.zip"
        "https://drivers.amd.com/drivers/firepro/15.302.2301-linux-retail_end_user.zip"
        "http://techeng.amd.com/1417/15.201.1701-150915a-294997C-AES.zip"
       #"https://www2.ati.com/drivers/embedded/15.302.2301-160625a-311286e-aes.zip"
       #"http:s//www2.ati.com/drivers/embedded/15.201-160507a-311613e-aes.zip"
    "https://raw.githubusercontent.com/pciutils/pciids/ab8e0dc2f9bcc6d7cf49866c769175cf0e119dd2/pci.ids"
    #https://launchpad.net/ubuntu/+archive/primary/+files/fglrx-installer_${_tarball}.orig.tar.gz
    catalyst.sh
    atieventsd.sh
    atieventsd.service
    arch-fglrx-authatieventsd_new.patch
    mhwd-catalyst
    temp-links-catalyst.service  temp_links_catalyst
    fglrx-outputclass.conf
    LICENSE.TXT
    MHWDCONFIG)

url_ref="http://support.amd.com/en-us/download/desktop?os=Linux+x86"
DLAGENTS="https::/usr/bin/curl --referer ${url_ref} -o %o %u"

sha256sums=('bf3e6e7d5c51db3d075410a3f116f865b82823debc1d66698d187249feec6a91'
            '3acff4f15946394112311e32e9db723546ec4c4da89c1f6c4f420060c507c150'
            'ff9d6932593dbba6d9f900f0381666bd8a2a8e4d68b215cc422f84d233ffcf14'
            'SKIP'
            'd5583bfb5977f73b4ca65533030f490350daca9e0ed10aefe517ffb70817531e'
            '9b347c3f518ddf12bb08a3cf09afcc3096e5dd4488e7ca3445df97b392985e8b'
            '398bade6ea2cb084043d87f6580569dd54b769055cdb518e2a074124c20f2606'
            'e9db1f09c6ebbe2024bcbb40a86482d4fdbcf227a6f1d58385101efe46dab9e5'
            '4f36dd7b3bf2beec22af68f1aedf96cbdb9fa7b0586af71bac5c8b1f4a952358'
            'c97a2735f80416151b2a71504e42385c4d8d95cf42aa8f90a6c7bd5a966c54e1'
            'efd26980888943293a7cf1d8d781b96b3bc7a5cdf23f926aa68ac4bc348b7691'
            '00066682bb985bdd957a16f67404a1d4653fa2c85f4e7b8b6a924e06ef135c38'
            '4f7530540f6e1ea032746e94bd164160abdf93c15509bfb8bdbecd23bcea5c47'
            '92a260edbc4c7794c755678aaaf30b326f2826a69a209df75c7771d317a069ff')

prepare() {
	/bin/sh ./AMD-Catalyst-15.9-Linux-installer-15.201.1151-x86.x86_64.run --extract 15.9
	/bin/sh ./fglrx-15.201.1701/amd-driver-installer-15.201.1701-x86.x86_64.run --extract 15.201
	/bin/sh ./fglrx-15.302.2301/amd-driver-installer-15.302.2301-x86.x86_64.run --extract 15.302

}

package_catalyst-utils() {
	pkgdesc="AMD Catalyst drivers utilities and libraries."
	depends=('catalyst-video' 'catalyst-server>=1.7.0' 'catalyst-server<1.18.0' 'libxrandr' 'libsm' 'fontconfig' 'libxcursor' 'libxi' 'gcc-libs' 'libxinerama' 'mesa' 'mhwd' 'xdg-su')
        optdepends=('qt4: to run ATi Catalyst Control Center (amdcccle)'
		    'libxxf86vm: to run ATi Catalyst Control Center (amdcccle)'
		    'acpid: acpi event support  / atieventsd'
		    'opencl-catalyst: OpenCL implemention for AMD Catalyst')
	conflicts=('catalyst-legacy' 'catalyst-legacy-utils' 'catalyst-13.4' 'catalyst-13.4-utils' 'xvba-video')
	install="${pkgname}.install"

	cd 15.302

    ## Install userspace tools and libraries
    # Create directories
      install -m755 -d "${pkgdir}/etc/ati"
      install -m755 -d "${pkgdir}/etc/rc.d"
      install -m755 -d "${pkgdir}/etc/profile.d"
      install -m755 -d "${pkgdir}/etc/acpi/events"
      install -m755 -d "${pkgdir}/etc/security/console.apps"

      install -m755 -d "${pkgdir}/usr/lib/xorg/modules/dri"
      install -m755 -d "${pkgdir}/usr/lib/xorg/modules/drivers"
      install -m755 -d "${pkgdir}/usr/lib/xorg/modules/linux"
      install -m755 -d "${pkgdir}/usr/lib/dri"
      install -m755 -d "${pkgdir}/usr/lib/fglrx"
      install -m755 -d "${pkgdir}/usr/lib/systemd/system"

      install -m755 -d "${pkgdir}/usr/bin"

      install -m755 -d "${pkgdir}/usr/include/GL"

      install -m755 -d "${pkgdir}/usr/share/applications"
      install -m755 -d "${pkgdir}/usr/share/ati/amdcccle"
      install -m755 -d "${pkgdir}/usr/share/licenses/${pkgname}"
      install -m755 -d "${pkgdir}/usr/share/man/man8"
      install -m755 -d "${pkgdir}/usr/share/pixmaps"

    # X.org driver
      if [ "${CARCH}" = "i686" ]; then
	cd "${srcdir}/15.302/xpic/usr/X11R6/lib/modules"
      elif [ "${CARCH}" = "x86_64" ]; then
	cd "${srcdir}/15.302/xpic_64a/usr/X11R6/lib64/modules"
      fi

      install -m755 *.so "${pkgdir}/usr/lib/xorg/modules"
      install -m755 drivers/*.so "${pkgdir}/usr/lib/xorg/modules/drivers"
      install -m755 linux/*.so "${pkgdir}/usr/lib/xorg/modules/linux"

    # GLX extension module for X
    install -D -m755 extensions/fglrx/fglrx-libglx.so "${pkgdir}/usr/lib/fglrx/xorg/libglx.so.1"
    ln -s "libglx.so.1"  "${pkgdir}/usr/lib/fglrx/xorg/libglx.so"

    # We have to provide symlink to mesa (see https://bugzilla.redhat.com/show_bug.cgi?id=1413579#c57)
    #ln -s "/usr/lib/libGLX_mesa.so.0.0.0" "${pkgdir}/usr/lib/libGLX_indirect.so.0"
    #ln -s "fglrx/xorg/libglx.so.1" "${pkgdir}/usr/lib/libGLX_indirect.so.0"

    # TODO: could it be I'm stupid and I just added needless symlinks in a libglvnd world?
    ln -s /usr/lib/libEGL.so.1.0.0 "${pkgdir}/usr/lib/fglrx/libEGL.so.1.0.0"
    ln -s libEGL.so.1.0.0      "${pkgdir}/usr/lib/fglrx/libEGL.so.1"
    ln -s libEGL.so.1.0.0      "${pkgdir}/usr/lib/fglrx/libEGL.so"

    ln -s /usr/lib/libGLESv1_CM.so.1.0.0 "${pkgdir}/usr/lib/fglrx/libGLESv1_CM.so.1.0.0"
    ln -s libGLESv1_CM.so.1.0.0      "${pkgdir}/usr/lib/fglrx/libGLESv1_CM.so.1"
    ln -s libGLESv1_CM.so.1.0.0      "${pkgdir}/usr/lib/fglrx/libGLESv1_CM.so"

    ln -s /usr/lib/libGLESv2.so.2.0.0 "${pkgdir}/usr/lib/fglrx/libGLESv2.so.2.0.0"
    ln -s libGLESv2.so.2.0.0      "${pkgdir}/usr/lib/fglrx/libGLESv2.so.2"
    ln -s libGLESv2.so.2.0.0      "${pkgdir}/usr/lib/fglrx/libGLESv2.so"

    # Controlcenter / libraries
      if [ "${CARCH}" = "i686" ]; then
	cd "${srcdir}/15.302/arch/x86/usr"
	_lib=lib
        _amdarch=x86
      elif [ "${CARCH}" = "x86_64" ]; then
	cd "${srcdir}/15.302/arch/x86_64/usr"
	_lib=lib64
        _amdarch=x86_64
      fi

	# OpenGL library
	install -D -m755 X11R6/${_lib}/fglrx/fglrx-libGL.so.1.2 "${pkgdir}/usr/lib/fglrx/libGL.so.1.2"
	ln -s "libGL.so.1.2" "${pkgdir}/usr/lib/fglrx/libGL.so.1"
	ln -s "libGL.so.1.2" "${pkgdir}/usr/lib/fglrx/libGL.so"

      install -m755 X11R6/bin/* "${pkgdir}/usr/bin"
      install -m755 sbin/* "${pkgdir}/usr/bin"
      install -m755 X11R6/${_lib}/libAMDXvBA.so.1.0 "${pkgdir}/usr/lib"
      ln -snf libAMDXvBA.so.1.0 "${pkgdir}/usr/lib/libAMDXvBA.so.1"
      ln -snf libAMDXvBA.so.1.0 "${pkgdir}/usr/lib/libAMDXvBA.so"
      ln -snf /usr/lib/libXvBAW.so.1.0 "${pkgdir}/usr/lib/dri/fglrx_drv_video.so" #omega 14.12
      install -m755 X11R6/${_lib}/libatiadlxx.so "${pkgdir}/usr/lib"
      install -m755 X11R6/${_lib}/libfglrx_dm.so.1.0 "${pkgdir}/usr/lib"
      install -m755 X11R6/${_lib}/libXvBAW.so.1.0 "${pkgdir}/usr/lib"
      ln -snf libXvBAW.so.1.0 "${pkgdir}/usr/lib/libXvBAW.so.1"
      ln -snf libXvBAW.so.1.0 "${pkgdir}/usr/lib/libXvBAW.so"
      install -m644 X11R6/${_lib}/*.a "${pkgdir}/usr/lib"
      install -m644 X11R6/${_lib}/*.cap "${pkgdir}/usr/lib"
      install -m755 X11R6/${_lib}/modules/dri/*.so "${pkgdir}/usr/lib/xorg/modules/dri"
      install -m755 ${_lib}/*.so* "${pkgdir}/usr/lib"

    ## QT libs (only 2 files) - un-comment 2 lines below if you don't want to install qt package
#      install -m755 -d "${pkgdir}/usr/share/ati/${_lib}"
#      install -m755 share/ati/${_lib}/*.so* "${pkgdir}/usr/share/ati/${_lib}"

    # fix AIGLX open error (laptops wake on 4.15+?)
      install -m755 -d ${pkgdir}/usr/X11R6/${_lib}/modules/dri
      ln -snf /usr/lib/xorg/modules/dri/fglrx_dri.so ${pkgdir}/usr/X11R6/${_lib}/modules/dri/fglrx_dri.so

      ln -snf /usr/lib/xorg/modules/dri/fglrx_dri.so "${pkgdir}/usr/lib/dri/fglrx_dri.so"
      ln -snf libfglrx_dm.so.1.0 "${pkgdir}/usr/lib/libfglrx_dm.so.1"
      ln -snf libfglrx_dm.so.1.0 "${pkgdir}/usr/lib/libfglrx_dm.so"
      ln -snf libatiuki.so.1.0 "${pkgdir}/usr/lib/libatiuki.so.1"
      ln -snf libatiuki.so.1.0 "${pkgdir}/usr/lib/libatiuki.so"

    # >15.9 control files lack cards - also pick up older registry but newer profiles
      cd "${srcdir}/15.302/common"
      patch -Np2 -i "${srcdir}/arch-fglrx-authatieventsd_new.patch"
      install -m644 etc/ati/* "${pkgdir}/etc/ati"
      install -m644 ${srcdir}/15.9/common/etc/ati/*[!gb] "${pkgdir}/etc/ati"
      chmod 755 "${pkgdir}/etc/ati/authatieventsd.sh"

      install -m644 etc/security/console.apps/amdcccle-su "${pkgdir}/etc/security/console.apps"

      install -m755 usr/X11R6/bin/* "${pkgdir}/usr/bin"
      install -m644 usr/include/GL/*.h "${pkgdir}/usr/include/GL"
      install -m755 usr/sbin/*.sh "${pkgdir}/usr/bin"
      install -m644 usr/share/ati/amdcccle/* "${pkgdir}/usr/share/ati/amdcccle"
      install -m644 usr/share/icons/*.xpm "${pkgdir}/usr/share/pixmaps"
      install -m644 usr/share/man/man8/*.8 "${pkgdir}/usr/share/man/man8"
      install -m644 usr/share/applications/*.desktop "${pkgdir}/usr/share/applications"

    # ACPI example files
      install -m755 usr/share/doc/fglrx/examples/etc/acpi/*.sh "${pkgdir}/etc/acpi"
      sed -i -e "s/usr\/X11R6/usr/g" "${pkgdir}/etc/acpi/ati-powermode.sh"
      install -m644 usr/share/doc/fglrx/examples/etc/acpi/events/* "${pkgdir}/etc/acpi/events"

    # Add ATI Events Daemon launcher
      install -m755 "${srcdir}/atieventsd.sh" "${pkgdir}/etc/rc.d/atieventsd"
      install -m644 "${srcdir}/atieventsd.service" "${pkgdir}/usr/lib/systemd/system"

    # thanks to cerebral, we dont need that damned symlink
      install -m755 "${srcdir}/catalyst.sh" "${pkgdir}/etc/profile.d"

    # License
      install -m644 "${srcdir}/15.302/LICENSE.TXT" "${pkgdir}/usr/share/licenses/${pkgname}"
      install -m644 "${srcdir}/15.302/common/usr/share/doc/amdcccle/ccc_copyrights.txt" \
	"${pkgdir}/usr/share/licenses/${pkgname}/amdcccle_copyrights.txt"

    #workaround for the high io bug , thanks to lano1106 for finding this ugly bug! https://bbs.archlinux.org/viewtopic.php?pid=1279977#p1279977
      install -m755 "${srcdir}/temp_links_catalyst" "${pkgdir}/usr/bin"
      install -m644 "${srcdir}/temp-links-catalyst.service" "${pkgdir}/usr/lib/systemd/system"

    # provided in opencl-catalyst package
      rm "${pkgdir}"/usr/lib/lib{amdocl*,OpenCL}.so* 

    # Admin CC launcher fix
      cd "${pkgdir}/usr/share/applications"
      sed -i "s|${_execlineorig}|${_execlinenew}|g" amdccclesu.desktop

    # distro specific files must be installed in /usr/share/X11/xorg.conf.d
    install -m755 -d "${pkgdir}/usr/share/X11/xorg.conf.d"
    install -m644 "${srcdir}/fglrx-outputclass.conf" "${pkgdir}/usr/share/X11/xorg.conf.d/"

    install -dm 755 "${pkgdir}"/etc/ld.so.conf.d
    echo -e '/usr/lib/fglrx/' > "${pkgdir}"/etc/ld.so.conf.d/00-fglrx.conf
}

package_opencl-catalyst() {
      pkgdesc="OpenCL implemention from AMD"
      provides=('opencl-driver')
      conflicts=('opencl-amd' 'opencl-catalyst-legacy' 'opencl-catalyst-13.4')
      depends=('gcc-libs')
      optdepends=('opencl-headers: headers necessary for OpenCL development'
                  'opencl-icd-loader: OpenCL ICD Bindings')

      cd "${srcdir}/15.201"
      
      install -dm755 "${pkgdir}"/usr/{bin,lib}
      install -dm755 "${pkgdir}/etc/OpenCL/vendors"
      install -dm755 "${pkgdir}/usr/share/licenses/${pkgname}"

      if [ "${CARCH}" = "i686" ]; then
      _ARCHDIR="x86"
      _ARCHLIB=""
      else
      _ARCHDIR="x86_64"
      _ARCHLIB="64"
      fi
      
      cd "${srcdir}/15.201/arch/${_ARCHDIR}"
      install -m755 usr/bin/clinfo "${pkgdir}/usr/bin/"
      install -m644 etc/OpenCL/vendors/amdocl*.icd "${pkgdir}/etc/OpenCL/vendors/"
      install -m755 usr/lib${_ARCHLIB}/libamdocl*.so "${pkgdir}/usr/lib/"
#      install -m755 usr/lib${_ARCHLIB}/libOpenCL.so.1 "${pkgdir}/usr/lib/"      #opencl-icd-loader provides this
#      ln -s libOpenCL.so.1 "${pkgdir}/usr/lib/libOpenCL.so"
      # license
      install -m644 "${srcdir}/15.201/LICENSE.TXT" "${pkgdir}/usr/share/licenses/${pkgname}/"
}

package_mhwd-catalyst() {
    pkgdesc="MHWD module-ids for catalyst $pkgver"
    arch=('any')

    __CATAIDS="catalyst.ids"
    __RADSIREM="radsirem.ids"

    install -d -m755 "${pkgdir}/var/lib/mhwd/ids/pci/"
    # Generate mhwd database
    sh -e "${srcdir}/mhwd-catalyst" \
    "${srcdir}/15.9/common/lib/modules/fglrx/build_mod/fglrxko_pci_ids.h" \
    > "${srcdir}/catalyst_support.ids"

    # Remove IDs from radeonSi supported generations
    __RADEONSI_SUPPORT=("Bristol Ridge"
                    "Raven Ridge"
                    "Stoney Ridge"
                    "Fiji"
                    "Tonga"
                    "Topaz"
                    "Amethyst"
                    "Polaris"
                    "Polaris10"
                    "Polaris11"
                    "Polaris12"
                    "Baffin"
                    "Ellesmere"
                    "Lexa"
                    "Chelsea"
                    "Cape Verde"
                    "Heathrow"
                    "Wimbledon"
                    "Pitcairn"
                    "Sun"
                    "Oland"
                    "Mars"
                    "Venus"
                    "Neptune"
                    "Jet Pro"
                    "Iceland"
                    "Opal"
                    "Exo Pro"
                    "Meso"
                    "Strato Pro"
                    "Bonaire"
                    "Saturn"
                    "Strato"
                    "Roland"
                    "Tropo"
                    "Hawaii"
                    "Vesuvius"
                    "Tahiti"
                    "New Zealand"
                    "Malta"
                    "Kaveri"
                    "Kabini"
                    "Temash"
                    "Beema"
                    "Mullins"
                    "Curacao"
                    "Grenada")


    # Check for file
    if [ ! -f "${srcdir}/pci.ids" ] || ! grep "List of PCI ID's" "${srcdir}/pci.ids" > /dev/null
        then
            echo "Missing or wrong source PCIID-file"
            exit 1
        fi

    ## Extract AMD part
    # Remove everything before ^1002
    sed -i -n '/^1002/,$p' "${srcdir}/pci.ids"
    # Remove everything below ^1003
    sed -i '/^1003/,$d' "${srcdir}/pci.ids"
    # Remove comments
    sed -i '/^#/ d' "${srcdir}/pci.ids"
    # Leading tab
    sed -i 's/^\t//g' "${srcdir}/pci.ids"
    # Remove sub-IDs
    sed -i '/^\t/ d' "${srcdir}/pci.ids"

    # Loop this part for every device name supported by radeonSi
    for (( i=0; i<${#__RADEONSI_SUPPORT[@]}; i++ ));
    do
        # Ignore generation without entry
        if grep -wi " ${__RADEONSI_SUPPORT[i]}" "${srcdir}/pci.ids" > /dev/null
            then
                grep -wi " ${__RADEONSI_SUPPORT[i]}" "${srcdir}/pci.ids" | grep -vi "audio" | grep -v "#" | cut -d" " -f1 >> "${srcdir}/${__RADSIREM}"
        fi
    done

    # Remove RadeonSI supported generations from catalyst.ids
    echo "# List generated by mhwd. Do not edit manually." > ${pkgdir}/var/lib/mhwd/ids/pci/${__CATAIDS}
    if [ ! "${_testing}" = "y" ]; then
        grep -i -F -v -x -f "${srcdir}/${__RADSIREM}" "${srcdir}/catalyst_support.ids" > "${pkgdir}/var/lib/mhwd/ids/pci/${__CATAIDS}"
    else
        cat "${srcdir}/catalyst_support.ids" > "${pkgdir}/var/lib/mhwd/ids/pci/${__CATAIDS}"
    fi

    # Add back killed off mhwd entry
    install -D -m755 "${srcdir}"/MHWDCONFIG -t "${pkgdir}/var/lib/mhwd/db/pci/graphic_drivers/catalyst/"
}
